#include <kapi/cpuinfo.hpp>
#include <kapi/cpuid.hpp>
#include <kapi/cpufeatures.hpp>
#include <fried/stdio.h>

extern void dump_cpuinfo(char *args) {
    printf("vendor_id     : %s\n", cpu_info.cpu_vendor_id());
    if (cpu_info.IsIntel()) {
        printf("flags         : ");
        if (cpu_info.CpuHas(X86_FEATURE_SSE3))
            printf("sse3 ");
        if (cpu_info.CpuHas(X86_FEATURE_PCLMULQDQ))
            printf("pclmulqdq ");
        if (cpu_info.CpuHas(X86_FEATURE_DTSE64))
            printf("dtse64 ");
        if (cpu_info.CpuHas(X86_FEATURE_MONITOR))
            printf("monitor ");
        if (cpu_info.CpuHas(X86_FEATURE_DSCPL))
            printf("dscpl ");
        if (cpu_info.CpuHas(X86_FEATURE_VMX))
            printf("vmx ");
        if (cpu_info.CpuHas(X86_FEATURE_SMX))
            printf("smx ");
        if (cpu_info.CpuHas(X86_FEATURE_EIST))
            printf("eist ");
        if (cpu_info.CpuHas(X86_FEATURE_TM2))
            printf("tm2 ");
        if (cpu_info.CpuHas(X86_FEATURE_SSSE3))
            printf("ssse3 ");
        if (cpu_info.CpuHas(X86_FEATURE_CNXTID))
            printf("cnxtid ");
        if (cpu_info.CpuHas(X86_FEATURE_SDBG))
            printf("sdbg ");
        if (cpu_info.CpuHas(X86_FEATURE_FMA))
            printf("fma ");
        if (cpu_info.CpuHas(X86_FEATURE_CMPXCHG16B))
            printf("cmpxchg16b ");
        if (cpu_info.CpuHas(X86_FEATURE_XTPRUPDATE))
            printf("xtprupdate ");
        if (cpu_info.CpuHas(X86_FEATURE_PDCM))
            printf("pdcm ");
        if (cpu_info.CpuHas(X86_FEATURE_PCID))
            printf("pcid ");
        if (cpu_info.CpuHas(X86_FEATURE_DCA))
            printf("dca ");
        if (cpu_info.CpuHas(X86_FEATURE_SSE41))
            printf("sse41 ");
        if (cpu_info.CpuHas(X86_FEATURE_SSE42))
            printf("sse42 ");
        if (cpu_info.CpuHas(X86_FEATURE_X2APIC))
            printf("x2apic ");
        if (cpu_info.CpuHas(X86_FEATURE_MOVBE))
            printf("movbe ");
        if (cpu_info.CpuHas(X86_FEATURE_POPCNT))
            printf("popcnt ");
        if (cpu_info.CpuHas(X86_FEATURE_TSCDEADLINE))
            printf("tscdeadline ");
        if (cpu_info.CpuHas(X86_FEATURE_AESNI))
            printf("aesni ");
        if (cpu_info.CpuHas(X86_FEATURE_XSAVE))
            printf("xsave ");
        if (cpu_info.CpuHas(X86_FEATURE_OSXSAVE))
            printf("osxsave ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX))
            printf("avx ");
        if (cpu_info.CpuHas(X86_FEATURE_F16C))
            printf("f16c ");
        if (cpu_info.CpuHas(X86_FEATURE_RDRAND))
            printf("rdrand ");
        if (cpu_info.CpuHas(X86_FEATURE_NOTUSED))
            printf("notused ");
        if (cpu_info.CpuHas(X86_FEATURE_FPU))
            printf("fpu ");
        if (cpu_info.CpuHas(X86_FEATURE_VME))
            printf("vme ");
        if (cpu_info.CpuHas(X86_FEATURE_DE))
            printf("de ");
        if (cpu_info.CpuHas(X86_FEATURE_PSE))
            printf("pse ");
        if (cpu_info.CpuHas(X86_FEATURE_TSC))
            printf("tsc ");
        if (cpu_info.CpuHas(X86_FEATURE_MSR))
            printf("msr ");
        if (cpu_info.CpuHas(X86_FEATURE_PAE))
            printf("pae ");
        if (cpu_info.CpuHas(X86_FEATURE_MCE))
            printf("mce ");
        if (cpu_info.CpuHas(X86_FEATURE_CX8))
            printf("cx8 ");
        if (cpu_info.CpuHas(X86_FEATURE_APIC))
            printf("apic ");
        if (cpu_info.CpuHas(X86_FEATURE_SEP))
            printf("sep ");
        if (cpu_info.CpuHas(X86_FEATURE_MTRR))
            printf("mtrr ");
        if (cpu_info.CpuHas(X86_FEATURE_PGE))
            printf("pge ");
        if (cpu_info.CpuHas(X86_FEATURE_MCA))
            printf("mca ");
        if (cpu_info.CpuHas(X86_FEATURE_CMOV))
            printf("cmov ");
        if (cpu_info.CpuHas(X86_FEATURE_PAT))
            printf("pat ");
        if (cpu_info.CpuHas(X86_FEATURE_PSE36))
            printf("pse36 ");
        if (cpu_info.CpuHas(X86_FEATURE_PSN))
            printf("psn ");
        if (cpu_info.CpuHas(X86_FEATURE_CLFSH))
            printf("clfsh ");
        if (cpu_info.CpuHas(X86_FEATURE_DS))
            printf("ds ");
        if (cpu_info.CpuHas(X86_FEATURE_ACPI))
            printf("acpi ");
        if (cpu_info.CpuHas(X86_FEATURE_MMX))
            printf("mmx ");
        if (cpu_info.CpuHas(X86_FEATURE_FXSR))
            printf("fxsr ");
        if (cpu_info.CpuHas(X86_FEATURE_SSE))
            printf("sse ");
        if (cpu_info.CpuHas(X86_FEATURE_SSE2))
            printf("sse2 ");
        if (cpu_info.CpuHas(X86_FEATURE_SS))
            printf("ss ");
        if (cpu_info.CpuHas(X86_FEATURE_HTT))
            printf("htt ");
        if (cpu_info.CpuHas(X86_FEATURE_TM))
            printf("tm ");
        if (cpu_info.CpuHas(X86_FEATURE_PBE))
            printf("pbe ");
        if (cpu_info.CpuHas(X86_FEATURE_FSGSBASE))
            printf("fsgsbase ");
        if (cpu_info.CpuHas(X86_FEATURE_TSC_ADJUST))
            printf("tsc_adjust ");
        if (cpu_info.CpuHas(X86_FEATURE_BMI1))
            printf("bmi1 ");
        if (cpu_info.CpuHas(X86_FEATURE_HLE))
            printf("hle ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX2))
            printf("avx2 ");
        if (cpu_info.CpuHas(X86_FEATURE_FDP_EXCPTN_ONLY))
            printf("fdp_excptn_only ");
        if (cpu_info.CpuHas(X86_FEATURE_SMEP))
            printf("smep ");
        if (cpu_info.CpuHas(X86_FEATURE_BMI2))
            printf("bmi2 ");
        if (cpu_info.CpuHas(X86_FEATURE_ERMS))
            printf("erms ");
        if (cpu_info.CpuHas(X86_FEATURE_INVPCID))
            printf("invpcid ");
        if (cpu_info.CpuHas(X86_FEATURE_RTM))
            printf("rtm ");
        if (cpu_info.CpuHas(X86_FEATURE_CQM))
            printf("cqm ");
        if (cpu_info.CpuHas(X86_FEATURE_ZERO_FCS_FDS))
            printf("zero_fcs_fds ");
        if (cpu_info.CpuHas(X86_FEATURE_MPX))
            printf("mpx ");
        if (cpu_info.CpuHas(X86_FEATURE_RDT_A))
            printf("rdt_a ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512F))
            printf("avx512f ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512DQ))
            printf("avx512dq ");
        if (cpu_info.CpuHas(X86_FEATURE_RDSEED))
            printf("rdseed ");
        if (cpu_info.CpuHas(X86_FEATURE_ADX))
            printf("adx ");
        if (cpu_info.CpuHas(X86_FEATURE_SMAP))
            printf("smap ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512IFMA))
            printf("avx512ifma ");
        if (cpu_info.CpuHas(X86_FEATURE_CLFLUSHOPT))
            printf("clflushopt ");
        if (cpu_info.CpuHas(X86_FEATURE_CLWB))
            printf("clwb ");
        if (cpu_info.CpuHas(X86_FEATURE_INTEL_PT))
            printf("intel_pt ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512PF))
            printf("avx512pf ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512ER))
            printf("avx512er ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512CD))
            printf("avx512cd ");
        if (cpu_info.CpuHas(X86_FEATURE_SHA_NI))
            printf("sha_ni ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512BW))
            printf("avx512bw ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512VL))
            printf("avx512vl ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512VBMI))
            printf("avx512vbmi ");
        if (cpu_info.CpuHas(X86_FEATURE_UMIP))
            printf("umip ");
        if (cpu_info.CpuHas(X86_FEATURE_PKU))
            printf("pku ");
        if (cpu_info.CpuHas(X86_FEATURE_OSPKE))
            printf("ospke ");
        if (cpu_info.CpuHas(X86_FEATURE_WAITPKG))
            printf("waitpkg ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512_VBMI2))
            printf("avx512_vbmi2 ");
        if (cpu_info.CpuHas(X86_FEATURE_GFNI))
            printf("gfni ");
        if (cpu_info.CpuHas(X86_FEATURE_VAES))
            printf("vaes ");
        if (cpu_info.CpuHas(X86_FEATURE_VPCLMULQDQ))
            printf("vpclmulqdq ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512_VNNI))
            printf("avx512_vnni ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512_BITALG))
            printf("avx512_bitalg ");
        if (cpu_info.CpuHas(X86_FEATURE_TME))
            printf("tme ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512_VPOPCNTDQ))
            printf("avx512_vpopcntdq ");
        if (cpu_info.CpuHas(X86_FEATURE_LA57))
            printf("la57 ");
        if (cpu_info.CpuHas(X86_FEATURE_RDPID))
            printf("rdpid ");
        if (cpu_info.CpuHas(X86_FEATURE_CLDEMOTE))
            printf("cldemote ");
        if (cpu_info.CpuHas(X86_FEATURE_MOVDIRI))
            printf("movdiri ");
        if (cpu_info.CpuHas(X86_FEATURE_MOVDIR64B))
            printf("movdir64b ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512_4VNNIW))
            printf("avx512_4vnniw ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512_4FMAPS))
            printf("avx512_4fmaps ");
        if (cpu_info.CpuHas(X86_FEATURE_FSRM))
            printf("fsrm ");
        if (cpu_info.CpuHas(X86_FEATURE_AVX512_VP2INTERSECT))
            printf("avx512_vp2intersect ");
        if (cpu_info.CpuHas(X86_FEATURE_MD_CLEAR))
            printf("md_clear ");
        if (cpu_info.CpuHas(X86_FEATURE_TSX_FORCE_ABORT))
            printf("tsx_force_abort ");
        if (cpu_info.CpuHas(X86_FEATURE_PCONFIG))
            printf("pconfig ");
        if (cpu_info.CpuHas(X86_FEATURE_SPEC_CTRL))
            printf("spec_ctrl ");
        if (cpu_info.CpuHas(X86_FEATURE_INTEL_STIBP))
            printf("intel_stibp ");
        if (cpu_info.CpuHas(X86_FEATURE_FLUSH_L1D))
            printf("flush_l1d ");
        if (cpu_info.CpuHas(X86_FEATURE_ARCH_CAPABILITIES))
            printf("arch_capabilities ");
        if (cpu_info.CpuHas(X86_FEATURE_CORE_CAPABILITIES))
            printf("core_capabilities ");
        if (cpu_info.CpuHas(X86_FEATURE_SPEC_CTRL_SSBD))
            printf("spec_ctrl_ssbd ");
        if (cpu_info.CpuHas(X86_FEATURE_SYSCALL_SYSRET))
            printf("syscall_sysret ");
        if (cpu_info.CpuHas(X86_FEATURE_EXECUTE_DISABLE_BIT))
            printf("execute_disable_bit ");
        if (cpu_info.CpuHas(X86_FEATURE_1GIB_PAGE))
            printf("1gib_page ");
        if (cpu_info.CpuHas(X86_FEATURE_RDTSCP_IA32_TSC_AUX))
            printf("rdtscp_ia32_tsc_aux ");
        if (cpu_info.CpuHas(X86_FEATURE_LM_AVAIL))
            printf("lm_avail ");
    }
    puts("");
}